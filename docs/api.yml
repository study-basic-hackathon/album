openapi: 3.0.3
info:
  title: 花道展写真共有用アルバム
  description: 花道展の作品や花展の情報を管理するためのAPIです。
  version: 1.0.0

tags:
  - name: exhibition
    description: 花展の情報を取得するAPI
  - name: arranger
    description: 作者の情報を取得するAPI
  - name: material
    description: 材料の情報を取得するAPI
  - name: category
    description: カテゴリの情報を取得するAPI
  - name: season
    description: 季節の情報を取得するAPI

servers:
  - url: http://localhost:3000
    description: ローカル環境

paths:
  /exhibitions:
    get:
      tags:
        - exhibition
      summary: 花展の一覧
      description: 花展の一覧を取得する。花展は開催日の降順。
      operationId: listExhibitions
      responses:
        '200':
          $ref: '#/components/responses/ExhibitionsResponse'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - exhibition
      summary: 花展の登録
      description: 花展を登録する
      operationId: createExhibition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExhibitionPayload'
      responses:
        '201':
          $ref: '#/components/responses/CreatedExhibitionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /exhibitions/{exhibitionId}:
    get:
      tags:
        - exhibition
      summary: 花展の取得
      description: 花展の情報を取得する
      operationId: getExhibition
      parameters:
        - $ref: '#/components/parameters/ExhibitionIdParam'
      responses:
        '200':
          $ref: '#/components/responses/ExhibitionResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      tags:
        - exhibition
      summary: 花展の更新
      description: 花展の情報を更新する
      operationId: updateExhibition
      parameters:
        - $ref: '#/components/parameters/ExhibitionIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExhibitionPayload'
      responses:
        '204':
          description: 花展が更新された
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - exhibition
      summary: 花展の削除
      description: 花展を削除する
      operationId: deleteExhibition
      parameters:
        - $ref: '#/components/parameters/ExhibitionIdParam'
      responses:
        '204':
          description: 花展が削除された
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /exhibitions/{exhibitionId}/works:
    get:
      tags:
        - exhibition
      summary: 花展の作品の一覧
      description: 花展ごとの作品の一覧を登録の作品の登録日の昇順で取得する
      operationId: listExhibitionWorks
      parameters:
        - $ref: '#/components/parameters/ExhibitionIdParam'
      responses:
        '200':
          $ref: '#/components/responses/WorkListItemsResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          description: Unexpected error

  /exhibitions/{exhibitionId}/works/{workId}:
    get:
      tags:
        - exhibition
      summary: 花展の作品の取得
      description: 花展ごとの作品の情報を取得する
      operationId: getExhibitionWork
      parameters:
        - $ref: '#/components/parameters/ExhibitionIdParam'
        - $ref: '#/components/parameters/WorkIdParam'
      responses:
        '200':
          $ref: '#/components/responses/WorkListItemResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          description: Unexpected error

  /arrangers:
    get:
      tags:
        - arranger
      summary: 作者の一覧
      description: 登録されている作者の一覧を取得する
      operationId: listArrangers
      responses:
        '200':
          $ref: '#/components/responses/ArrangersResponse'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - arranger
      summary: 作者の登録
      description: 作者を登録する
      operationId: createArranger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArrangerPayload'
      responses:
        '201':
          $ref: '#/components/responses/CreatedArrangerResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /arrangers/{arrangerId}:
    get:
      tags:
        - arranger
      summary: 作者の情報の取得
      description: 作者の情報を取得する
      operationId: getArranger
      parameters:
        - $ref: '#/components/parameters/ArrangerIdParam'
      responses:
        '200':
          $ref: '#/components/responses/ArrangerResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          description: Unexpected error
    put:
      tags:
        - arranger
      summary: 作者の更新
      description: 作者の情報を更新する
      operationId: updateArranger
      parameters:
        - $ref: '#/components/parameters/ArrangerIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArrangerPayload'
      responses:
        '204':
          description: 作者が更新された
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - arranger
      summary: 作者の削除
      description: 作者を削除する
      operationId: deleteArranger
      parameters:
        - $ref: '#/components/parameters/ArrangerIdParam'
      responses:
        '204':
          description: 作者が削除された
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /arrangers/{arrangerId}/works:
    get:
      tags:
        - arranger
      summary: 作者の作品の一覧
      description: 作者ごとの作品の一覧を作品の登録日の昇順で取得する
      operationId: listArrangerWorks
      parameters:
        - $ref: '#/components/parameters/ArrangerIdParam'
      responses:
        '200':
          $ref: '#/components/responses/WorkListItemsResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /arrangers/{arrangerId}/works/{workId}:
    get:
      tags:
        - arranger
      summary: 作者の作品の取得
      description: 作者ごとの作品の情報を取得する
      operationId: getArrangerWork
      parameters:
        - $ref: '#/components/parameters/ArrangerIdParam'
        - $ref: '#/components/parameters/WorkIdParam'
      responses:
        '200':
          $ref: '#/components/responses/WorkListItemResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /materials:
    get:
      tags:
        - material
      summary: 材料の一覧
      description: 登録されている材料の一覧を取得する
      operationId: listMaterials
      responses:
        '200':
          $ref: '#/components/responses/MaterialsResponse'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - material
      summary: 材料の登録
      description: 材料を登録する
      operationId: createMaterial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMaterialPayload'
      responses:
        '201':
          $ref: '#/components/responses/CreatedMaterialResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /materials/{materialId}:
    get:
      tags:
        - material
      summary: 材料の情報の取得
      description: 材料の情報を取得する
      operationId: getMaterial
      parameters:
        - $ref: '#/components/parameters/MaterialIdParam'
      responses:
        '200':
          $ref: '#/components/responses/MaterialResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      tags:
        - material
      summary: 材料の更新
      description: 材料の情報を更新する
      operationId: updateMaterial
      parameters:
        - $ref: '#/components/parameters/MaterialIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMaterialPayload'
      responses:
        '204':
          description: 材料が更新された
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - material
      summary: 材料の削除
      description: 材料を削除する
      operationId: deleteMaterial
      parameters:
        - $ref: '#/components/parameters/MaterialIdParam'
      responses:
        '204':
          description: 材料が削除された
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /materials/{materialId}/works:
    get:
      tags:
        - material
      summary: 材料の作品の一覧
      description: 材料ごとの作品の一覧を作品の登録日の昇順で取得する
      operationId: listMaterialWorks
      parameters:
        - $ref: '#/components/parameters/MaterialIdParam'
      responses:
        '200':
          $ref: '#/components/responses/WorkListItemsResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /materials/{materialId}/works/{workId}:
    get:
      tags:
        - material
      summary: 材料の作品の取得
      description: 材料ごとの作品の情報を取得する
      operationId: getMaterialWork
      parameters:
        - $ref: '#/components/parameters/MaterialIdParam'
        - $ref: '#/components/parameters/WorkIdParam'
      responses:
        '200':
          $ref: '#/components/responses/WorkListItemResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /categories:
    get:
      tags:
        - category
      summary: カテゴリの一覧
      description: 登録されているカテゴリの一覧を取得する
      operationId: listCategories
      responses:
        '200':
          $ref: '#/components/responses/CategoriesResponse'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - category
      summary: カテゴリの登録
      description: カテゴリを登録する
      operationId: createCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryPayload'
      responses:
        '201':
          $ref: '#/components/responses/CreatedCategoryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /categories/{categoryId}:
    get:
      tags:
        - category
      summary: カテゴリの情報の取得
      description: カテゴリの情報を取得する
      operationId: getCategory
      parameters:
        - $ref: '#/components/parameters/CategoryIdParam'
      responses:
        '200':
          $ref: '#/components/responses/CategoryResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      tags:
        - category
      summary: カテゴリの更新
      description: カテゴリの情報を更新する
      operationId: updateCategory
      parameters:
        - $ref: '#/components/parameters/CategoryIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryPayload'
      responses:
        '204':
          description: カテゴリが更新された
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - category
      summary: カテゴリの削除
      description: カテゴリを削除する
      operationId: deleteCategory
      parameters:
        - $ref: '#/components/parameters/CategoryIdParam'
      responses:
        '204':
          description: カテゴリが削除された
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /categories/{categoryId}/works:
    get:
      tags:
        - category
      summary: カテゴリの作品の一覧
      description: カテゴリごとの作品の一覧を作品の登録日の昇順で取得する
      operationId: listCategoryWorks
      parameters:
        - $ref: '#/components/parameters/CategoryIdParam'
      responses:
        '200':
          $ref: '#/components/responses/WorkListItemsResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /categories/{categoryId}/works/{workId}:
    get:
      tags:
        - category
      summary: カテゴリの作品の取得
      description: カテゴリごとの作品の情報を取得する
      operationId: getCategoryWork
      parameters:
        - $ref: '#/components/parameters/CategoryIdParam'
        - $ref: '#/components/parameters/WorkIdParam'
      responses:
        '200':
          $ref: '#/components/responses/WorkListItemResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /seasons:
    get:
      tags:
        - season
      summary: 季節の一覧
      description: 季節の一覧を取得する
      operationId: listSeasons
      responses:
        '200':
          $ref: '#/components/responses/SeasonsResponse'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - season
      summary: 季節の登録
      description: 季節を登録する
      operationId: createSeason
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Season'
      responses:
        '201':
          $ref: '#/components/responses/CreatedSeasonResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /seasons/{seasonId}:
    get:
      tags:
        - season
      summary: 季節の情報の取得
      description: 季節の情報を取得する
      operationId: getSeason
      parameters:
        - $ref: '#/components/parameters/SeasonIdParam'
      responses:
        '200':
          $ref: '#/components/responses/SeasonResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      tags:
        - season
      summary: 季節の更新
      description: 季節の情報を更新する
      operationId: updateSeason
      parameters:
        - $ref: '#/components/parameters/SeasonIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSeasonPayload'
      responses:
        '204':
          description: 季節が更新された
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - season
      summary: 季節の削除
      description: 季節を削除する
      operationId: deleteSeason
      parameters:
        - $ref: '#/components/parameters/SeasonIdParam'
      responses:
        '204':
          description: 季節が削除された
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /seasons/{seasonId}/works:
    get:
      tags:
        - season
      summary: 季節の作品の一覧
      description: 季節ごとの作品の一覧を作品の登録日の昇順で取得する
      operationId: listSeasonWorks
      parameters:
        - $ref: '#/components/parameters/SeasonIdParam'
      responses:
        '200':
          $ref: '#/components/responses/WorkListItemsResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /seasons/{seasonId}/works/{workId}:
    get:
      tags:
        - season
      summary: 季節の作品の取得
      description: 季節ごとの作品の情報を取得する
      operationId: getSeasonWork
      parameters:
        - $ref: '#/components/parameters/SeasonIdParam'
        - $ref: '#/components/parameters/WorkIdParam'
      responses:
        '200':
          $ref: '#/components/responses/WorkListItemResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /works:
    post:
      tags:
        - work
      summary: 作品の登録
      description: 作品を登録する
      operationId: createWork
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkPayload'
      responses:
        '201':
          $ref: '#/components/responses/CreatedWorkResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /works/{workId}:
    get:
      tags:
        - work
      summary: 作品の取得
      description: 作品の情報を取得する
      operationId: getWork
      parameters:
        - $ref: '#/components/parameters/WorkIdParam'
      responses:
        '200':
          $ref: '#/components/responses/WorkListItemResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      tags:
        - work
      summary: 作品の更新
      description: 作品の情報を更新する
      operationId: updateWork
      parameters:
        - $ref: '#/components/parameters/WorkIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkPayload'
      responses:
        '204':
          description: 作品が更新された
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - work
      summary: 作品の削除
      description: 作品を削除する
      operationId: deleteWork
      parameters:
        - $ref: '#/components/parameters/WorkIdParam'
      responses:
        '204':
          description: 作品が削除された
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /images:
    post:
      tags:
        - image
      summary: 画像の登録
      description: 画像を登録する
      operationId: uploadImage
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadImagePayload'
      responses:
        '201':
          description: 画像が登録された
          headers:
            Location:
              description: 登録された画像のURL
              schema:
                type: string
                example: "/images/1"
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /images/{imageId}:
    get:
      tags:
        - work
      summary: 作品の画像の取得
      description: 作品の画像を取得する
      operationId: getImage
      parameters:
        - $ref: '#/components/parameters/ImageIdParam'
      responses:
        '200':
          description: 画像が取得された
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - work
      summary: 画像の削除
      description: 画像を削除する
      operationId: deleteImage
      parameters:
        - $ref: '#/components/parameters/ImageIdParam'
      responses:
        '204':
          description: 画像が削除された
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
components:
  schemas:
    Exhibition:
      type: object
      properties:
        id:
          type: integer
          description: 花展のID
        name:
          type: string
          description: 花展の名前
        started_date:
          type: string
          format: date
          description: 花展の開始日
        ended_date:
          type: string
          format: date
          description: 花展の終了日
      required:
        - id
        - name
        - started_date
        - ended_date
      example:
        id: 1
        name: "春の花展"
        started_date: "2023-03-01"
        ended_date: "2023-03-31"
    Work:
      type: object
      properties:
        id:
          type: integer
          description: 作品のID
        title:
          type: string
          description: 作品のタイトル
          nullable: true
        exhibition_id:
          type: integer
          description: 花展のID
        arranger_id:
          type: integer
          description: 作者のID
        season_id:
          type: integer
          description: 季節のID
        material_ids:
          type: array
          items:
            type: integer
          description: 使用された材料のIDのリスト
        category_id:
          type: integer
          description: カテゴリのID
        image_ids:
          type: array
          items:
            type: integer
          description: 作品の画像のIDのリスト
        created_at:
          type: string
          format: date-time
          description: 作品の登録日時
      required:
        - id
        - title
        - exhibition_id
        - arranger_id
        - material_ids
        - season_id
        - category_id
        - image_ids
      example:
        id: 1
        title: "桜のアレンジメント"
        arranger_id: 1
        material_ids: [1, 2, 3]
        season_id: 1
        category_id: 1
        image_ids:
          - 1
          - 2
    WorkListItem:
      type: object
      properties:
        work:
          $ref: '#/components/schemas/Work'
        navigation:
          $ref: '#/components/schemas/WorkListNavigation'
      required:
        - work
        - navigation
    WorkListNavigation:
      type: object
      properties:
        next:
          type: integer
          description: 次の作品のID
          nullable: true
        previous:
          type: integer
          description: 前の作品のID
          nullable: true
      required:
        - next
        - previous
      example:
        next: 2
        previous: null
    Arranger:
      type: object
      properties:
        id:
          type: integer
          description: 作者のID
        name:
          type: string
          description: 作者の名前
      required:
        - id
        - name
      example:
        id: 1
        name: "山田太郎"
    Material:
      type: object
      properties:
        id:
          type: integer
          description: 材料のID
        name:
          type: string
          description: 材料の名前
      required:
        - id
        - name
      example:
        id: 1
        name: "芍薬"
    Category:
      type: object
      properties:
        id:
          type: integer
          description: カテゴリのID
        name:
          type: string
          description: カテゴリの名前
      required:
        - id
        - name
      example:
        id: 1
        name: "格花"
    Season:
      type: object
      properties:
        id:
          type: integer
          description: 季節のID
        name:
          type: string
          description: 季節の名前
      required:
        - id
        - name
      example:
        id: 1
        name: "春"
    CreateExhibitionPayload:
      type: object
      properties:
        name:
          type: string
          description: 花展の名前
        started_date:
          type: string
          format: date
          description: 花展の開始日
        ended_date:
          type: string
          format: date
          description: 花展の終了日
      required:
        - name
        - started_date
        - ended_date
      example:
        name: "春の花展"
        started_date: "2023-03-01"
        ended_date: "2023-03-31"
    UpdateExhibitionPayload:
      type: object
      properties:
        name:
          type: string
          description: 花展の名前
        started_date:
          type: string
          format: date
          description: 花展の開始日
        ended_date:
          type: string
          format: date
          description: 花展の終了日
      required:
        - name
        - started_date
        - ended_date
      example:
        name: "春の花展"
        started_date: "2023-03-01"
        ended_date: "2023-03-31"
    CreateWorkPayload:
      type: object
      properties:
        title:
          type: string
          description: 作品のタイトル
          nullable: true
        exhibition_id:
          type: integer
          description: 花展のID
        arranger_id:
          type: integer
          description: 作者のID
        material_ids:
          type: array
          items:
            type: integer
          description: 使用された材料のIDのリスト
        season_id:
          type: integer
          description: 季節のID
        category_id:
          type: integer
          description: カテゴリのID
        image_ids:
          type: array
          items:
            type: integer
          description: 作品の画像のIDのリスト
      required:
        - title
        - exhibition_id
        - arranger_id
        - material_ids
        - season_id
        - category_id
        - image_ids
      example:
        title: "桜のアレンジメント"
        arranger_id: 1
        material_ids: [1, 2, 3]
        season_id: 1
        category_id: 1
        image_ids: [1, 2]
    UpdateWorkPayload:
      type: object
      properties:
        title:
          type: string
          description: 作品のタイトル
          nullable: true
        arranger_id:
          type: integer
          description: 作者のID
        material_ids:
          type: array
          items:
            type: integer
          description: 使用された材料のIDのリスト
        season_id:
          type: integer
          description: 季節のID
        category_id:
          type: integer
          description: カテゴリのID
      required:
        - title
        - arranger_id
        - material_ids
        - season_id
        - category_id
      example:
        title: "桜のアレンジメント"
        arranger_id: 1
        material_ids: [1, 2, 3]
        season_id: 1
        category_id: 1
    CreateArrangerPayload:
      type: object
      properties:
        name:
          type: string
          description: 作者の名前
      required:
        - name
      example:
        name: "山田太郎"
    UpdateArrangerPayload:
      type: object
      properties:
        name:
          type: string
          description: 作者の名前
      required:
        - name
      example:
        name: "山田太郎"
    CreateMaterialPayload:
      type: object
      properties:
        name:
          type: string
          description: 材料の名前
      required:
        - name
      example:
        name: "芍薬"
    UpdateMaterialPayload:
      type: object
      properties:
        name:
          type: string
          description: 材料の名前
      required:
        - name
      example:
        name: "芍薬"
    CreateCategoryPayload:
      type: object
      properties:
        name:
          type: string
          description: カテゴリの名前
      required:
        - name
      example:
        name: "格花"
    UpdateCategoryPayload:
      type: object
      properties:
        name:
          type: string
          description: カテゴリの名前
      required:
        - name
      example:
        name: "格花"
    CreateSeasonPayload:
      type: object
      properties:
        name:
          type: string
          description: 季節の名前
      required:
        - name
      example:
        name: "春"
    UpdateSeasonPayload:
      type: object
      properties:
        name:
          type: string
          description: 季節の名前
      required:
        - name
      example:
        name: "春"
    SeasonResponse:
      type: object
      properties:
        name:
          type: string
          description: 季節の名前
      required:
        - id
        - name
      example:
        id: 1
        name: "春"
    UploadImagePayload:
      type: object
      properties:
        image:
          type: string
          format: binary
          description: 作品の画像ファイル
      required:
        - image
  parameters:
    ExhibitionIdParam:
      name: exhibitionId
      in: path
      required: true
      description: 花展のID
      schema:
        type: integer
    WorkIdParam:
      name: workId
      in: path
      required: true
      description: 作品のID
      schema:
        type: integer
    ArrangerIdParam:
      name: arrangerId
      in: path
      required: true
      description: 作者のID
      schema:
        type: integer
    MaterialIdParam:
      name: materialId
      in: path
      required: true
      description: 材料のID
      schema:
        type: integer
    CategoryIdParam:
      name: categoryId
      in: path
      required: true
      description: カテゴリのID
      schema:
        type: integer
    SeasonIdParam:
      name: seasonId
      in: path
      required: true
      description: 季節のID
      schema:
        type: integer
    ImageIdParam:
      name: imageId
      in: path
      required: true
      description: 画像のID
      schema:
        type: integer
  responses:
    UnexpectedError:
      description: An unexpected error occurred
    NotFound:
      description: データが見つからない
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "データが見つかりません"
    BadRequest:
      description: 不正なリクエスト
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "入力内容が正しくありません"
    ExhibitionResponse:
      description: 単一の花展の情報
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Exhibition'
    ExhibitionsResponse:
      description: 花展の一覧
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Exhibition'
            example:
              - id: 1
                name: "春の花展"
                started_date: "2023-03-01"
                ended_date: "2023-03-31"
              - id: 2
                name: "夏の花展"
                started_date: "2023-06-01"
                ended_date: "2023-06-30"
              - id: 3
                name: "秋の花展"
                started_date: "2023-09-01"
                ended_date: "2023-09-30"
              - id: 4
                name: "冬の花展"
                started_date: "2023-12-01"
                ended_date: "2023-12-31"
    WorkListItemsResponse:
      description: 花展の作品の一覧
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/WorkListItem'
            example:
              - work:
                  id: 1
                  title: "桜のアレンジメント"
                  arranger_id: 1
                  material_ids: [1, 2, 3]
                  category_id: 1
                  season_id: 1
                  image_ids:
                    - 1
                    - 2
                navigation:
                  next: 2
                  previous: null
              - work:
                  id: 2
                  title: "梅の花束"
                  arranger_id: 2
                  material_ids: [4, 5]
                  season_id: 1
                  category_id: 2
                  image_ids:
                    - 3
                navigation:
                  next: 3
                  previous: 1
              - work:
                  id: 3
                  title: null
                  arranger_id: 3
                  material_ids: [6]
                  season_id: 2
                  category_id: 1
                  image_ids:
                    - 4
                navigation:
                  next: null
                  previous: 2
    WorkListItemResponse:
      description: 花展の作品一覧の中の単一の作品
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WorkListItem'
    ArrangersResponse:
      description: 作者の一覧
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Arranger'
            example:
              - id: 1
                name: "山田太郎"
              - id: 2
                name: "佐藤花子"
              - id: 3
                name: "鈴木一郎"
    ArrangerResponse:
      description: 単一の作者
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Arranger'
    MaterialsResponse:
      description: 材料の一覧
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Material'
            example:
              - id: 1
                name: "芍薬"
              - id: 2
                name: "バラ"
              - id: 3
                name: "ユリ"
    MaterialResponse:
      description: 単一の材料
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Material'
    CategoriesResponse:
      description: 作品分類の一覧
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Category'
            example:
              - id: 1
                name: "格花"
              - id: 2
                name: "新花"
              - id: 3
                name: "造形"
    CategoryResponse:
      description: 単一の作品分類
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Category'
    SeasonsResponse:
      description: 季節の一覧
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Season'
            example:
              - id: 1
                name: "春"
              - id: 2
                name: "夏"
              - id: 3
                name: "秋"
              - id: 4
                name: "冬"
    SeasonResponse:
      description: 単一の季節
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Season'
    CreatedExhibitionResponse:
      description: 花展の作成の成功
      headers:
        Location:
          description: 作成された花展のパス
          schema:
            type: string
            example: "/exhibitions/1"
    CreatedWorkResponse:
      description: 作品の作成の成功
      headers:
        Location:
          description: 作成された作品のパス
          schema:
            type: string
            example: "/works/1"
    CreatedArrangerResponse:
      description: 作者の作成の成功
      headers:
        Location:
          description: 作成された作者のパス
          schema:
            type: string
            example: "/arrangers/1"
    CreatedMaterialResponse:
      description: 材料の作成の成功
      headers:
        Location:
          description: 作成された材料のパス
          schema:
            type: string
            example: "/materials/1"
    CreatedCategoryResponse:
      description: 作品分類の作成の成功
      headers:
        Location:
          description: 作成された作品分類のパス
          schema:
            type: string
            example: "/categories/1"
    CreatedSeasonResponse:
      description: 季節の作成の成功
      headers:
        Location:
          description: 作成された季節のパス
          schema:
            type: string
            example: "/seasons/1"
    CreatedWorkImageResponse:
      description: 作品の画像の登録の成功
      headers:
        Location:
          description: 作成された画像のURL
          schema:
            type: string
            example: "/works/1/images/1"
